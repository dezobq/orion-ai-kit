name: AI Pipeline
on: [pull_request, workflow_dispatch]
jobs:
  ai:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build AI image
        run: docker compose build

      - name: Detect stacks
        run: docker compose run --rm ai python ai_cli.py detect

      - name: Run tests
        run: docker compose run --rm ai python ai_cli.py run --task test

      - name: Run lint
        run: docker compose run --rm ai python ai_cli.py run --task lint

      - name: Run coverage
        run: docker compose run --rm ai python ai_cli.py run --task coverage

      - name: Run mutation testing
        run: docker compose run --rm ai python ai_cli.py run --task mutation || true

      - name: Quality gates (coverage & mutation)
        if: always()
        run: |
          docker compose run --rm --entrypoint "" ai bash -lc \
            "python3 scripts/check_thresholds.py --min-coverage 0.80 --min-mutation 0.60"

      - name: Generate summary
        if: always()
        run: |
          docker compose run --rm ai python scripts/generate_summary.py >> $GITHUB_STEP_SUMMARY || true

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            reports/**/*
            junit.xml
            .coverage
          retention-days: 30

      - name: Upload to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: reports/cobertura-coverage.xml,reports/coverage.xml,reports/lcov.info
          flags: unittests
          name: codecov-orion-ai-kit
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: List all reports
        if: always()
        run: docker compose run --rm ai python ai_cli.py reports
